/subscribers:
  get:
    summary: Get all subscribers
    description: Retrieves a paginated list of all newsletter subscribers with statistics (admin only).
    tags: [Subscription]
    security:
      - bearerAuth: []
    parameters:
      - in: query
        name: page
        required: false
        schema:
          type: integer
          minimum: 1
          default: 1
        description: Page number for pagination
        example: 1
      - in: query
        name: limit
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 100
          default: 50
        description: Number of subscribers per page
        example: 20
      - in: query
        name: search
        required: false
        schema:
          type: string
          maxLength: 100
        description: Search term to filter subscribers by email (case-insensitive)
        example: 'john@example.com'
    responses:
      200:
        description: List of subscribers retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'Found 25 active subscribers'
                data:
                  type: object
                  properties:
                    subscribers:
                      type: array
                      items:
                        $ref: '#/components/schemas/Subscriber'
                    pagination:
                      $ref: '#/components/schemas/PaginationInfo'
      401:
        description: Unauthorized - Invalid or missing authentication token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      403:
        description: Forbidden - Admin access required
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

  post:
    summary: Subscribe to newsletter
    description: Allows a user to subscribe using their email address. Handles new subscriptions, reactivations, and existing subscribers.
    tags: [Subscription]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SubscribeRequest'
    responses:
      200:
        description: Already subscribed - user was already a subscriber
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'You are already subscribed to our newsletter.'
                data:
                  type: object
                  properties:
                    email:
                      type: string
                      example: 'user@example.com'
                    subscribed:
                      type: boolean
                      example: true
      201:
        description: New subscription successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'Successfully subscribed! Welcome to Menyalo.'
                data:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      example: '123e4567-e89b-12d3-a456-426614174000'
                    email:
                      type: string
                      example: 'user@example.com'
                    subscribed:
                      type: boolean
                      example: true
      400:
        description: Invalid request - missing or invalid email
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      429:
        description: Too many requests - rate limit exceeded
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/subscribers/unsubscribe:
  get:
    summary: Unsubscribe from newsletter
    description: Unsubscribes a user using a secure JWT token sent via email. Token contains the user's email and expiration.
    tags: [Subscription]
    parameters:
      - in: query
        name: token
        required: true
        schema:
          type: string
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
        description: Secure JWT unsubscribe token containing user email
    responses:
      200:
        description: Unsubscription successful or user was already unsubscribed
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'Successfully unsubscribed from Menyalo.'
                data:
                  type: object
                  properties:
                    email:
                      type: string
                      example: 'user@example.com'
      400:
        description: Invalid or expired token, or missing token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      404:
        description: Subscription not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/subscribers/stats:
  get:
    summary: Get subscription statistics
    description: Retrieves subscription statistics and analytics (admin only).
    tags: [Subscription]
    security:
      - bearerAuth: []
    responses:
      200:
        description: Subscription statistics retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'Subscription stats retrieved successfully'
                data:
                  $ref: '#/components/schemas/SubscriptionStats'
      401:
        description: Unauthorized - Invalid or missing authentication token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      403:
        description: Forbidden - Admin access required
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'
      500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorResponse'

/subscribers/health:
  get:
    summary: Health check
    description: Check if the subscription service is running and healthy.
    tags: [Subscription]
    responses:
      200:
        description: Service is healthy
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: 'Subscription service is healthy'
                timestamp:
                  type: string
                  format: date-time
                  example: '2025-01-15T10:30:00.000Z'
